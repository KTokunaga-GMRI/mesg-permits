---
title: "License Networks"
author: "cslovas"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

```{r}
#| label:   load libraries & data
#| echo:    false
#| message: false

# Install & load the libraries
library(tidyverse)
library(tidygraph)
library(ggraph)
library(igraph)
library(here)
library(gmRi)
library(gt)

# Read in gomfish package from Joshua and Theresa
devtools::install_github("Social-Oceans-Lab/gomfish")
library(gomfish)

data(ind_lic_portfolio)

# Read in updated license information from DMR
license_codes <- read.csv(here("Data", "updated_license_codes.csv"))

# use data cleaned previously [clean_license_data.R] in order to combine new/overlapping license codes 
clean_portfolio <- read_rds(here("Data", "portfolio_by_lic_description.rds"))
```

## Harvester licenses in Maine

To focus on fishery access and harvester adaptability, we've removed indigenous licenses and post-harvest (i.e., processors, wholesalers, etc) from the data set.

```{r}
#| label:   cleaning data
#| echo:    false
#| message: false

# Remove indigenous and non-harvester licenses
license_types <- names(clean_portfolio %>% ungroup(landings_number) %>% select(!c(landings_number, license_year)))
license_types <- as_tibble(license_types) %>%
  rename("license" = "value")

# license_types %>% 
#   filter(!(str_starts(code, "ma"))) %>%
#   filter(!(str_starts(code, "mi"))) %>%
#   filter(!(str_starts(code, "nb"))) %>%
#   filter(!(str_starts(code, "p")))  %>%
#   filter(!code %in% c("car", "dl", "r", "re", "sdt", "suwt", "swr", "swrs", "swro", 
#             "ten", "w", "wl", "wls", "ws", "lpl", "lpto", "lt", "lts",
#             "ed", "eds", "lmp", "mw", "mws", "st","sts", "sut", "vh")) %>%
#   left_join(license_codes) %>%
#   filter(!group %in% c("Post-Harvest", "Non-resident", "Demo")) -> license_types

license_types %>% 
  gt() %>% 
  #cols_hide(group) %>%
  cols_label(
    #code   = md("**License Code**"),
    license = md("**License Type**"))

```

## Time series of license holdings

```{r}
#| label:   time series of license types
#| echo:    false
#| message: false
#| warning: false
#| column:  page
#| fig-width:  9
#| fig-height: 13

clean_portfolio %>% 
  ungroup(landings_number) %>%
  select(license_year, license_types$license) %>%
  pivot_longer(cols = 2:58, names_to = "license", values_to = "count") %>%
  #left_join(license_types %>% select(code, description)) %>%
  #mutate(description = tolower(description)) %>%
  group_by(license_year, license) %>%
  summarise(total = sum(count)) %>%
  group_by(license) %>%
  nest() -> license_time_series

# plot
license_time_series %>% 
  mutate(license = str_to_title(license)) %>%
  mutate(time_series = map2(data, license, function(x,y){
    out <- ggplot(data = x)+
      geom_line(aes(x = license_year, y = total)) +
      ylim(c(0, NA)) +
      theme_gmri(plot.title = element_text(size = 8),
                 axis.text  = element_text(size = 6),
                 axis.title = element_blank()) + 
      ggtitle(license)
    return(out)
  })) -> license_time_series

gridExtra::marrangeGrob(license_time_series$time_series, layout_matrix = matrix(1:12, ncol = 3, nrow = 4, byrow = TRUE), top = NULL)

```

```{r}
#| label:   view co-matrix
#| echo:    false
#| message: false
#| warning: false

### Either remove this or change to annual - not necessary to show this 
# 
# co_matrix <- ind_lic_portfolio %>%
#   arrange(license_year) %>%
#   select((license_types$code))
# co_matrix <- crossprod(as.matrix(co_matrix))
# diag(co_matrix) <- 0
# 
# as_tibble(co_matrix) %>%
#   pivot_longer(cols = 1:74, names_to = "license_code", values_to = "Count") %>%
#   select(license_code) %>%
#   distinct() %>%
#   cbind(as_tibble(co_matrix)) %>%
#   gt() %>%
#   cols_label(license_code = md("**License Code**"))
```

## Annual License Network Metrics

Degree and betweenness are both ways of measuring centrality.

"The *degree* of a node is the number of other nodes that single node is connected to.

Important nodes tend to have more connections to other nodes. Highly connected nodes are interpreted to have high degree centrality."

"\[*Betweenness*\] ranks the nodes based on the flow of connections through the network. Importance is demonstrated through high frequency of connection with multiple other nodes. Nodes with high levels of betweenness tend to serve as a bridge for multiple sets of other important nodes." [*Source*](https://bookdown.org/jdholster1/idsr/network-analysis.html#advanced-case-study)

```{r}
#| label:      annual co-matrix
#| echo:       false
#| warning:    false
#| column:     page
#| fig-width:  9
#| fig-height: 13

annual_co_matrix <- clean_portfolio %>%
  ungroup(landings_number) %>%
  arrange(license_year) %>%
  select(license_types$license, license_year) %>%
  group_by(license_year) %>%
  nest() %>%
  mutate(co_matrix = map(data, function(df){
    out <- crossprod(as.matrix(df)) 
    diag(out) <- 0
    return(out)
  })) %>%
  select(license_year, co_matrix)

annual_metrics <- annual_co_matrix %>%
  mutate(graph_obj     = map(co_matrix, function(x){graph.adjacency(x, mode = "undirected", weighted = TRUE)}),
         degree        = map(graph_obj, function(x){degree(x)}),
         betweeness    = map(graph_obj, function(x){betweenness(x)}),
         evcent        = map(graph_obj, function(x){evcent(x)}))

metrics_series <- annual_metrics %>% 
  select(license_year, degree) %>% 
  unnest_longer(degree) %>% 
  group_by(degree_id) %>%
  rename("license" = "degree_id") %>%
  full_join(annual_metrics %>% 
              select(license_year, betweeness) %>% 
              unnest_longer(betweeness) %>% 
              group_by(betweeness_id) %>%
              rename("license" = "betweeness_id")) %>% 
  relocate("license", .after = "license_year") %>%
  pivot_longer(degree:betweeness, names_to = "metric", values_to = "value") %>%
  nest() %>%
  left_join(license_types %>% select(license)) %>%
  mutate(license = str_to_title(license))

metrics_series <- metrics_series %>% 
  mutate(time_series = map2(data, license, function(x,y){
    out <- ggplot(data = x)+
      geom_line(aes(x=license_year, y=value)) +
      facet_wrap(~metric, ncol = 1) +
      ylim(c(0, 150)) +
      theme_gmri(plot.title = element_text(size = 8),
                 axis.text  = element_text(size = 6),
                 axis.title = element_blank(),
                 strip.text = element_text(size = 8, color = "black"),
                 strip.background = element_blank()) +
      ggtitle(license)
    return(out)
  }))

gridExtra::marrangeGrob(metrics_series$time_series, layout_matrix = matrix(1:15, ncol = 3, nrow = 5, byrow= TRUE), top = NULL)
```

## Annual Network Plots
### tbd
